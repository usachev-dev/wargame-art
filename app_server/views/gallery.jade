extends layout
include _includes/sharedHTMLfunctions
block gallery-button
    li.active
        a(href='/gallery/') Галерея миниатюр
block content
    script(src="https://code.jquery.com/jquery-3.1.1.min.js")
    script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js")
    .container-fluid.gallery#galleryID(ng-controller="galleryCtrl as gc" ng-cloak )
        .col-xs-12.col-sm-9.col-lg-10
            .row
                #banner
                    h2 Галерея наших работ
                    .error=message
            .row.dynamic-grid(angular-grid="gc.showedGalleries"
            ag-grid-width="300"
            ag-gutter-size="10"
            ag-id="gallery"

            )
                .gallery-entry(ng-repeat="gallery in gc.showedGalleries track by $index")
                    a(href='/gallery/{{gallery.slug}}')
                        img.img-responsive(ng-src='https://s3.amazonaws.com/wargame-art/gallery-thumbs-450/{{gallery.slug}}/{{gallery.mainImage.filename}}' alt='{{gallery.mainImage.alt}}')
                        .caption
                            h3 {{gallery.title}}
                                span(level-icons,level="gallery.level")
                            p {{gallery.genre}}, {{gallery.system}}
                                span(style="float: right").photos {{gallery.images.length+1}}&nbsp;
                                    span.glyphicon.glyphicon-camera
                            p {{gallery.subtitle}}
        .col-sm-3.col-lg-2.hidden-xs(ng-cloak)#searchbar
            form
                h2 {{gc.foundGalleries}}
                .form-group.has-feedback
                    label(for="textFilter") Поиск
                    input#textFilter(name="search" type="text" ng-model="textFilter").form-control
                    i.glyphicon.glyphicon-search.form-control-feedback
                .form-group
                    h3 Игровые системы:
                    .checkbox(ng-repeat="system in gc.systems")
                        label
                            input(type="checkbox" ng-model="selectSystems[system.name]")
                            span {{system.name}}
                .form-group
                    h3 Жанры:
                    .checkbox(ng-repeat="genre in gc.genres")
                        label
                            input(type="checkbox" ng-model="selectGenres[genre.name]")
                            span {{genre.name}}
                .form-group
                    h3 Уровень покраски:
                    .checkbox
                        label
                            input(type="checkbox" ng-model="selectLevels[1]")
                            span.
                                <span class="fa fa-users"></span> Орда
                    .checkbox
                        label
                            input(type="checkbox" ng-model="selectLevels[2]")
                            span.
                                <span class="fa fa-thumbs-up"></span> Оптимальный
                    .checkbox
                        label
                            input(type="checkbox" ng-model="selectLevels[3]")
                            span.
                                <span class="fa fa-paint-brush"></span> Художественный

block searchButton
    button#searchButton.btn.btn-secondary.navbar-toggle
        i.glyphicon.glyphicon-search
block footer


block scripts
    script(src='/bootstrap/js/bootstrap.min.js')
    script(src="../javascripts/masonry/angulargrid.min.js")
    script(src="../javascripts/masonry/ng-infinite-scroll.min.js")
    script(src="../javascripts/angular/wargame-art.js")
    script(src="../javascripts/angular/galleryCtrl.js")
    script(src="../javascripts/angular/orderCtrl.js")

    script.
        $("#searchButton").click(function(){
            $( "#searchbar" ).toggleClass( 'hidden-xs' );
            $( "#searchbar" ).toggleClass( 'active' );
            $( "#searchbar" ).toggleClass( 'height' );
            $(document.body).toggleClass( 'overflow-hidden' );
            $(document.body).toggleClass( 'height100' );
        });
        function getDocumentHeight() {
            return Math.max(
                    Math.max(document.body.scrollHeight, document.documentElement.scrollHeight),
                    Math.max(document.body.offsetHeight, document.documentElement.offsetHeight),
                    Math.max(document.body.clientHeight, document.documentElement.clientHeight)
            );
        }
        window.onscroll = function () {
            if ((window.innerHeight + window.pageYOffset) >= (document.body.offsetHeight-10)) {
                angular.element(document.getElementById('galleryID')).scope().gc.loadGalleries();
                angular.element(document.getElementById('galleryID')).scope().$apply();
                //console.log("you're at the bottom of the page");
            }
        };

